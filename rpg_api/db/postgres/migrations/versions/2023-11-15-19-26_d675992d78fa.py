"""empty message

Revision ID: d675992d78fa
Revises: 819cbf6e030b
Create Date: 2023-11-15 19:26:05.254685

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d675992d78fa"
down_revision = "819cbf6e030b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ability_type",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attribute",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "base_class",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "base_user",
        sa.Column("first_name", sa.String(length=50), nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column(
            "status", sa.Enum("active", "inactive", name="user_status"), nullable=False
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "character_location",
        sa.Column("x", sa.Integer(), nullable=False),
        sa.Column("y", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "place",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("radius", sa.Integer(), nullable=False),
        sa.Column("x", sa.Integer(), nullable=False),
        sa.Column("y", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ability",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("ability_type_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["ability_type_id"],
            ["ability_type.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "character",
        sa.Column("base_class_id", sa.UUID(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("character_location_id", sa.UUID(), nullable=True),
        sa.Column(
            "gender", sa.Enum("male", "female", "other", name="gender"), nullable=False
        ),
        sa.Column("character_name", sa.String(length=50), nullable=False),
        sa.Column("alive", sa.Boolean(), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("xp", sa.Integer(), nullable=False),
        sa.Column("money", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["base_class_id"], ["base_class.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["character_location_id"], ["character_location.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["base_user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "relation",
        sa.Column("user1_id", sa.UUID(), nullable=False),
        sa.Column("user2_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user1_id"],
            ["base_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user2_id"],
            ["base_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "character_attributes",
        sa.Column("character_id", sa.UUID(), nullable=False),
        sa.Column("attribute_id", sa.UUID(), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["attribute_id"],
            ["attribute.id"],
        ),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["character.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "class_ability",
        sa.Column("base_class_id", sa.UUID(), nullable=False),
        sa.Column("ability_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["ability_id"],
            ["ability.id"],
        ),
        sa.ForeignKeyConstraint(
            ["base_class_id"],
            ["base_class.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("class_ability")
    op.drop_table("character_attributes")
    op.drop_table("relation")
    op.drop_table("character")
    op.drop_table("ability")
    op.drop_table("place")
    op.drop_table("character_location")
    op.drop_table("base_user")
    op.drop_table("base_class")
    op.drop_table("attribute")
    op.drop_table("ability_type")
    # ### end Alembic commands ###
